//- Global Vars
//- ----------------------------
-var blocks 	= [];

//- Add Block to Blocks (per Table)
//- ----------------------------
mixin cellBlock(name)
	-blocks[name] = this.block;

//- Add Placeholder-Image
mixin placeholder(width, height)
	-var w = width ? width : 1;
	-var h = height ? height : 1;
	img(src=phImgSRC, width=w, height=h, style="display: block; border: 0 none;")

//- Add Table
//- incl. Table-Attributes, thead, tbody, tr, th, td, th/td - Content and th/td - Attributes
//- ----------------------------

//- Add Table
//- rows:number
//- cellsPerRow:number
//- hasHead:boolean 		-> optional

//- Call with Attributes
//- +table(1,1)(
//-		table = { attributeName = String|object, attributeName = String|object, ... }
//- 	cell1 = { attributename = String|object, attributeName = String|object, ... }
//- )

//- INFORMATION:
//- Empty-Cells will be filled with a Placeholder-Image
//- if you define a Width- and/or a Height-Attribute on an empty Cell, this will be passed also to the Placeholder-Image

//- Call with Block
//- +table(1,1)
//- 	+cellBlock('cell1') -> optional
//- 		| this Block will appear inside of td...
//- 		+table(1,2)
//- 			+cellBlock('cell1')
//- 				| You can also call other mixins.
//- 			+cellBlock('cell2')
//- 				include ../path/to/file.jade

mixin table(rows,cellsPerRow,hasHead)
	//- Vars
	-var a 					= attributes;
	-var writeHead 	= hasHead;
	-var row 				= 0;
	
	-blocks 				= [];
	-a.table 				= a.table || {};
	
	//- Get Cells and there Attributes
	-var getCell 		= function(number) {
	-	var cell = { name: 'cell'+number, attrs: {} };
	-	if(typeof a[cell.name] == 'object') {
	-		for(var attr in a[cell.name]) {
	-			cell.attrs[attr] = a[cell.name][attr];
	- 	};
	- };
	-	return cell;
	-};

	-var getBlock = function(cell) {
	-	if(typeof blocks[cell.name] == 'function') {
	-		blocks[cell.name]();
	-	} else {
			+placeholder(cell.attrs.width,cell.attrs.height)
	-		hasBlock = false;
	-	}
	-};

	-if(a.table.style)
	-	a.table.style = mergeStyles(baseText,a.table.style);

	//- Write Table
	table(width="100%" border="0", cellspacing="0", cellpadding="0")&attributes(a.table)
		if hasHead
			thead
				tr
					-for(var th = 1; th <= cellsPerRow; th++)
						-var cell = getCell(th);
						
						-cell.attrs.style = cell.attrs.style || {};
						-cell.attrs.style = mergeStyles(baseText,cell.attrs.style);
				
						block
						-var hasBlock = true;
						-if(typeof blocks[cell.name] != 'function')
							-hasBlock = false;
						-if(!hasBlock)
							-cell.attrs.style = mergeStyles(cell.attrs.style, minLineheight);

						th(align="left", valign="top", style=baseText)&attributes(cell.attrs)
							block
							-getBlock(cell);

			-row++

		tbody
			-for(row; row < rows; row++)
				tr
					-for(var td = 1; td <= cellsPerRow; td++)
						-var num 	= row * cellsPerRow + td;
						-var cell = getCell(num);

						-cell.attrs.style = cell.attrs.style || {};
						-cell.attrs.style = mergeStyles(baseText,cell.attrs.style);
						
						block
						-var hasBlock = true;
						-if(typeof blocks[cell.name] != 'function')
							-hasBlock = false;
						-if(!hasBlock)
							-cell.attrs.style = mergeStyles(cell.attrs.style, minLineheight);

						td(align="left", valign="top", style=baseText)&attributes(cell.attrs)
							block
							-getBlock(cell);

	-blocks = [];
						

//- Add Button
//- incl. Link- and Icon-Attributes, Text- or Img-Icon, block, or inline
//- ----------------------------

//- Call with Icon "+"
//- +button("+")

//- Call inline
//- +button("+",true)

//- Call with Attributes
//- +button()(
//- 	button={ attributeName = String|object, attributeName = String|object, ... },
//- 	icon={ attributeName = String|object, attributeName = String|object, ... }
//- )

mixin button(eicon, inline)
	-var btn					= attributes.button || {};
	-var icon 				= attributes.icon || {};
	-var width 				= inline ? 'auto' : '100%';
	-var buttonStyles = inline ? buttonInline : button;
	-var otherStyles 	= { 'display': 'block' };

	-buttonStyles 		= mergeStyles(buttonStyles, { 'display': 'block', 'vertical-align': 'middle', 'mso-line-height-rule': 'exactly', 'line-height': '18px' });
	
	-btn.style				= btn.style || {};
	-btn.style				= mergeStyles(buttonStyles,btn.style);
	
	-var pTop					= btn.style['padding-top'] || '';
	-var pLeft				= btn.style['padding-left'] || '';
	-var pRight				= btn.style['padding-right'] || '';
	-var pBottom			= btn.style['padding-bottom'] || '';
	-var bg 					= btn.style['background-color'];

	-pTop 						= pTop.length ? pTop.replace(/px/g,'') : '';
	-pLeft 						= pLeft.length ? pLeft.replace(/px/g,'') : '';
	-pRight 					= pRight.length ? pRight.replace(/px/g,'') : '';
	-pBottom 					= pBottom.length ? pBottom.replace(/px/g,'') : '';

	-delete btn.style.padding;
	-delete btn.style['padding-top'];
	-delete btn.style['padding-left'];
	-delete btn.style['padding-right'];
	-delete btn.style['padding-bottom'];
	-delete btn.style['background-color'];

	+table(1,1)(
		cell1 = { align: "center" }
		cell2 = { height: "9", style: { "height": "9px", "font-size": "1px" } }
	)
		+cellBlock('cell1')
			+table(3,3)(
				table={ width: width, bgcolor: bg },
				cell1={ width: pLeft, height: pTop, style: minLineheight },
				cell2={ width: width, height: pTop, style: minLineheight },
				cell3={ width: pRight, height: pTop, style: minLineheight },

				cell4={ width: pLeft, height: '100%', style: minLineheight },
				cell5={ valign: 'middle', height: baseSize.replace(/px/g,'') },
				cell6={ width: pRight, height: '100%', style: minLineheight },

				cell7={ width: pLeft, height: pBottom, style: minLineheight },
				cell8={ width: width, height: pBottom, style: minLineheight },
				cell9={ width: pRight, height: pBottom, style: minLineheight }
			)
				+cellBlock('cell1')
					a(target="_blank", href=btn.href, style=otherStyles)
						+placeholder(pLeft,pTop)
				+cellBlock('cell2')
					a(target="_blank", href=btn.href, style=otherStyles)
						+placeholder('100%',pTop)
				+cellBlock('cell3')
					a(target="_blank", href=btn.href, style=otherStyles)
						+placeholder(pRight,pTop)

				+cellBlock('cell4')
					a(target="_blank", href=btn.href, style=mergeStyles(otherStyles,{ 'line-height': '18px' }))
						+placeholder(pLeft,18)

				+cellBlock('cell5')
					a(target="_blank")&attributes(btn)
						-if(eicon)
							span(height="15")&attributes(icon)=eicon + ' '
						block

				+cellBlock('cell6')
					a(target="_blank", href=btn.href, style=mergeStyles(otherStyles,{ 'line-height': '18px' }))
						+placeholder(pRight,18)

				+cellBlock('cell7')
					a(target="_blank", href=btn.href, style=otherStyles)
						+placeholder(pLeft,pBottom)
				+cellBlock('cell8')
					a(target="_blank", href=btn.href, style=otherStyles)
						+placeholder('100%',pBottom)
				+cellBlock('cell9')
					a(target="_blank", href=btn.href, style=otherStyles)
						+placeholder(pRight,pBottom)